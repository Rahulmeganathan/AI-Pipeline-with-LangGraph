name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Create test environment file
      run: |
        cat > .env << EOF
        LANGCHAIN_PROJECT=test_project
        LANGCHAIN_TRACING_V2=false
        OPENWEATHER_API_KEY=test_key
        QDRANT_URL=test_url
        QDRANT_API_KEY=test_key
        EOF
    
    - name: Run basic tests (without external services)
      run: |
        python -c "from src.config import get_settings; print('Config test passed')"
        python -c "from src.langsmith_integration import get_langsmith_config; print('LangSmith config test passed')"
    
    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short
      continue-on-error: true  # Allow tests to fail due to missing API keys
    
    - name: Check code quality
      run: |
        pip install flake8
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Check dependencies for known security vulnerabilities
      run: |
        safety check --json || true
    
    - name: Run security linter
      run: |
        bandit -r src/ -f json || true
